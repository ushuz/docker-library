replicaCount: 2

image:
  repository: ushuz/mastodon
  tag: "3.5.3"
  # use `Always` when using `latest` tag
  pullPolicy: Always

mastodon:
  # create an initial administrator user; the password is autogenerated and will
  # have to be reset
  createAdmin:
    enabled: false
    username: not_gargron
    email: not@example.com
  cron:
    # run `tootctl media remove` every week
    removeMedia:
      enabled: true
      schedule: "0 0 * * 0"
  # available locales: https://github.com/mastodon/mastodon/blob/main/config/application.rb#L71
  locale: en
  local_domain: xxx.social
  # Use of WEB_DOMAIN requires careful consideration: https://docs.joinmastodon.org/admin/config/#federation
  # You must redirect the path LOCAL_DOMAIN/.well-known/ to WEB_DOMAIN/.well-known/ as described
  web_domain: t.xxx.social
  alternate_domains: xxx.social,t.xxx.social
  # If set to true, the frontpage of your Mastodon server will always redirect to the first profile in the database and registrations will be disabled.
  singleUserMode: false
  s3:
    enabled: true
    access_key: <s3-access-key>
    access_secret: <s3-access-secret>
    bucket: <s3-bucket>
    endpoint: https://xxx.r2.cloudflarestorage.com
    hostname: pub-xxx.r2.dev
    region: "auto"
    # if you have a caching proxy, enter its base URL here.
    alias_host: pub-xxx.r2.dev
    # disable canned acl by setting ""
    permission: ""
  # THESE MUST BE SET MANUALLY
  # autogenerated keys are rotated on each upgrade
  # for secrets:      docker run --rm tootsuite/mastodon bundle exec rake secret
  # for vapid keys:   docker run --rm tootsuite/mastodon bundle exec rake mastodon:webpush:generate_vapid_key
  # references: https://docs.joinmastodon.org/admin/config/#secrets
  secrets:
    secret_key_base: $ bundle exec rake secret
    otp_secret: $ bundle exec rake secret
    vapid:
      private_key: <vapid-private-key>
      public_key: <vapid-public-key>
  sidekiq:
    concurrency: 25
  smtp:
    auth_method: plain
    ca_file: /etc/ssl/certs/ca-certificates.crt
    delivery_method: smtp
    domain: xxx.social
    enable_starttls: 'auto'
    from_address: mastodon@xxx.social
    openssl_verify_mode: peer
    port: 465
    reply_to:
    server: smtp.mailgun.org
    tls: true
    login: mastodon@xxx.social
    password: <smtp-password>
  streaming:
    port: 4000
    # this should be set manually since os.cpus() returns the number of CPUs on
    # the node running the pod, which is unrelated to the resources allocated to
    # the pod by k8s
    workers: 1
    # The base url for streaming can be set if the streaming API is deployed to
    # a different domain/subdomain.
    # base_url: wws://streaming.example.com
  web:
    port: 3000

ingress:
  enabled: true
  annotations:
    # For choosing an ingress ingressClassName is preferred over annotations
    kubernetes.io/ingress.class: nginx
    #
    # To automatically request TLS certificates use one of the following
    # kubernetes.io/tls-acme: "true"
    # cert-manager.io/cluster-issuer: "letsencrypt"
    #
    # ensure that NGINX's upload size matches Mastodon's
    #   for the K8s ingress controller:
    nginx.ingress.kubernetes.io/proxy-body-size: 40m
    #   for the NGINX ingress controller:
    nginx.org/client-max-body-size: 40m
  # you can specify the ingressClassName if it differs from the default
  ingressClassName:
  hosts:
    - host: t.xxx.social
      paths:
        - path: '/'
  # tls:
  #   - secretName: mastodon-tls
  #     hosts:
  #       - t.xxx.social

postgresql:
  auth:
    database_url: postgresql://<database-url>
    root_ca: |-
      -----BEGIN CERTIFICATE-----
      xxx
      -----END CERTIFICATE-----

service:
  type: ClusterIP
  port: 80

# https://github.com/mastodon/mastodon/blob/main/Dockerfile#L75
#
# if you manually change the UID/GID environment variables, ensure these values
# match:
podSecurityContext:
  runAsUser: 991
  runAsGroup: 991
  fsGroup: 991

securityContext: {}

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# Kubernetes manages pods for jobs and pods for deployments differently, so you might
# need to apply different annotations to the two different sets of pods. The annotations
# set with podAnnotations will be added to all deployment-managed pods.
podAnnotations: {}

# The annotations set with jobAnnotations will be added to all job pods.
jobAnnotations: {}

resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  limits:
    cpu: 100m
    memory: 2Gi
  requests:
    cpu: 100m
    memory: 256Mi

autoscaling:
  enabled: false
  minReplicas: 2
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80
